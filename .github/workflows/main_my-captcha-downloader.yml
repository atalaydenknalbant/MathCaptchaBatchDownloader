name: Build and deploy ASP.NET MVC5 to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      # 3Ô∏è‚É£ Setup NuGet
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      # 4Ô∏è‚É£ Restore NuGet packages
      - name: Restore NuGet packages
        run: nuget restore MathCaptchaBatchDownloader.csproj

      # 5Ô∏è‚É£ Build project in Release
      - name: Build project
        run: msbuild "MathCaptchaBatchDownloader.csproj" /nologo /verbosity:minimal /p:Configuration=Release

      # 6Ô∏è‚É£ Debug: dump tree so we see exactly where files are
      - name: Dump directory tree
        shell: pwsh
        run: |
          Write-Host "=== Repo root (depth=1) ==="
          Get-ChildItem -Path . -Depth 1 | ForEach-Object { Write-Host $_.FullName }
          Write-Host "=== bin folder (depth=1) ==="
          if (Test-Path bin) {
            Get-ChildItem -Path bin -Recurse -Depth 1 | ForEach-Object { Write-Host $_.FullName }
          }

      # 7Ô∏è‚É£ Assemble published site
      - name: Assemble published site
        shell: pwsh
        run: |
          # remove old published/
          Remove-Item -Recurse -Force published -ErrorAction SilentlyContinue

          # recreate folder structure
          New-Item -ItemType Directory -Force -Path published,published\bin,published\Views | Out-Null

          # copy all compiled DLLs & deps
          Copy-Item -Path "bin\*" -Destination published\bin -Recurse -Force

          # copy Razor views
          Copy-Item -Path "Views\*" -Destination published\Views -Recurse -Force

          # copy static Content if present
          if (Test-Path Content) {
            Copy-Item -Path "Content\*" -Destination published\Content -Recurse -Force
          }

          # copy Scripts if present
          if (Test-Path Scripts) {
            Copy-Item -Path "Scripts\*" -Destination published\Scripts -Recurse -Force
          }

          # copy config + Global.asax
          Copy-Item -Path "Web.config","Global.asax" -Destination published -Force

      # 8Ô∏è‚É£ Upload artifact
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: asp-artifact
          path: published/**

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      # 9Ô∏è‚É£ Download artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: asp-artifact
          path: '.'  
      
      - name: Show workspace contents
        run: |
          echo "PWD: $PWD"
          echo "Tree:"
          ls -R .

      # üîü Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with: 
          app-name: 'my-captcha-downloader'
          slot-name: 'Production'
          package: 'published'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7174F4F018AD442D85E55EC0D16A6233 }}
