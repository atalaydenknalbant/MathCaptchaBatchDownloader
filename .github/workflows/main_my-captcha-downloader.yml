name: Build and deploy ASP.NET MVC5 to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      # 1Ô∏è‚É£ Check out your repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Make MSBuild available
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      # 3Ô∏è‚É£ Make nuget.exe available
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      # 4Ô∏è‚É£ Restore all NuGet packages
      - name: Restore NuGet packages
        run: nuget restore MathCaptchaBatchDownloader.csproj

      # 5Ô∏è‚É£ Build the project in Release
      - name: Build project
        run: msbuild "MathCaptchaBatchDownloader.csproj" /nologo /verbosity:minimal /p:Configuration=Release

      # 6Ô∏è‚É£ Debug: dump directory tree to locate your build outputs
      - name: Dump directory tree (depth=3)
        shell: pwsh
        run: |
          Write-Host "=== Repository root contents (depth=3) ==="
          Get-ChildItem -Path . -Recurse -Depth 3 |
            ForEach-Object { Write-Host $_.FullName }

      # 7Ô∏è‚É£ Assemble the published site into `published/`
      - name: Assemble published site
        shell: pwsh
        run: |
          # remove any stale outputs
          Remove-Item -Recurse -Force published -ErrorAction SilentlyContinue

          # recreate folder structure
          New-Item -ItemType Directory -Force -Path published,published\bin,published\Views | Out-Null

          # copy the compiled DLL (adjust path if needed based on the dump above)
          Copy-Item -Path "bin\Release\MathCaptchaBatchDownloader.dll" -Destination published\bin\ -Force

          # copy Razor views
          Copy-Item -Path "Views\*" -Destination published\Views\ -Recurse -Force

          # copy static assets if present
          if (Test-Path "Content") { Copy-Item "Content\*" published\Content\ -Recurse -Force }
          if (Test-Path "Scripts") { Copy-Item "Scripts\*" published\Scripts\ -Recurse -Force }

          # copy MVC entrypoints/config
          Copy-Item -Path "Global.asax","Web.config" published\ -Force

      # 8Ô∏è‚É£ Upload the assembled site as an artifact
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: asp-artifact
          path: published/**

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      # 9Ô∏è‚É£ Download the artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: asp-artifact

      # üîü Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'my-captcha-downloader'
          slot-name: 'Production'
          package: published
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7174F4F018AD442D85E55EC0D16A6233 }}
