name: Build and deploy ASP app to Azure Web App - my-captcha-downloader

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      # 1️⃣ Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Make MSBuild available
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      # 3️⃣ Make nuget.exe available
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      # 4️⃣ Restore packages for the project inside the subfolder
      - name: Restore NuGet packages
        run: nuget restore MathCaptchaBatchDownloader/MathCaptchaBatchDownloader.csproj

      # 5️⃣ Build that same nested project in Release mode
      - name: Build project
        run: msbuild "MathCaptchaBatchDownloader/MathCaptchaBatchDownloader.csproj" `
              /nologo /verbosity:minimal /p:Configuration=Release

      # 6️⃣ Assemble the full website into published/
      - name: Assemble published site
        shell: pwsh
        run: |
          $proj = "MathCaptchaBatchDownloader"

          # clean and recreate
          Remove-Item -Recurse -Force published -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Force -Path published,published\bin,published\Views | Out-Null

          # copy the compiled DLL
          Copy-Item -Path "$proj/bin/Release/MathCaptchaBatchDownloader.dll" `
                    -Destination published\bin\ -Force

          # copy Views folder
          Copy-Item -Path "$proj/Views/*" `
                    -Destination published\Views\ -Recurse -Force

          # copy Content if it exists
          if (Test-Path "$proj/Content") {
            Copy-Item -Path "$proj/Content/*" `
                      -Destination published\Content\ -Recurse -Force
          }

          # copy Scripts if it exists
          if (Test-Path "$proj/Scripts") {
            Copy-Item -Path "$proj/Scripts/*" `
                      -Destination published\Scripts\ -Recurse -Force
          }

          # copy Web.config and Global.asax
          Copy-Item -Path "$proj/Web.config","$proj/Global.asax" `
                    -Destination published\ -Force

      # 7️⃣ Upload that folder as your build artifact
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ASP-app
          path: published/**

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      # 8️⃣ Grab the published/ artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ASP-app

      # 9️⃣ Deploy it to your Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'my-captcha-downloader'
          slot-name: 'Production'
          package: published
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7174F4F018AD442D85E55EC0D16A6233 }}
